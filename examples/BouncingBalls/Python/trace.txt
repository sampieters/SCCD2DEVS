__  Current Time:   0.000000 __________________________________________ 

EXIT STATE in model <MainApp>
		State: /running/root/main_behaviour/initializing

ENTER STATE in model <MainApp>
		State: /running/root/main_behaviour/running

EXIT STATE in model <MainApp>
		State: /running/root/cd_behaviour/waiting

ENTER STATE in model <MainApp>
		State: /running/root/cd_behaviour/creating


EXIT STATE in model <MainApp>
		State: /running/root/cd_behaviour/creating

ENTER STATE in model <MainApp>
		State: /running/root/cd_behaviour/waiting

__  Current Time:   0.006000 __________________________________________ 


INPUT EVENT from port <private_1_<narrow_cast>>
	\Type: <narrow_cast>
	\Event: (event name: set_association_name; port: private_1_<narrow_cast>; parameters: ['fields[0]'])

EXIT STATE in model <Field>
		State: /root/waiting

ENTER STATE in model <Field>
		State: /root/creating_window

OUTPUT EVENT to port <ui>
	\Event: (event name: create_window; port: ui; parameters: [800, 600, 'BouncingBalls', 'private_2_field_ui'])

__  Current Time:   0.027000 __________________________________________ 

INPUT EVENT from port <private_2_field_ui>
	\Type: field_ui
	\Event: (event name: window_created; port: private_2_field_ui; parameters: [0])

EXIT STATE in model <Field>
		State: /root/creating_window

ENTER STATE in model <Field>
		State: /root/creating_canvas

OUTPUT EVENT to port <ui>
	\Event: (event name: bind_event; port: ui; parameters: [0, 'WM_DELETE_WINDOW', 'window_close', 'private_2_field_ui'])

OUTPUT EVENT to port <ui>
	\Event: (event name: bind_event; port: ui; parameters: [0, '<Key>', 'key_press', 'private_2_field_ui'])

OUTPUT EVENT to port <ui>
	\Event: (event name: create_canvas; port: ui; parameters: [0, 800, 550, {'background': '#eee'}, 'private_2_field_ui'])

__  Current Time:   0.059000 __________________________________________ 

INPUT EVENT from port <private_2_field_ui>
	\Type: field_ui
	\Event: (event name: canvas_created; port: private_2_field_ui; parameters: [1])

EXIT STATE in model <Field>
		State: /root/creating_canvas

ENTER STATE in model <Field>
		State: /root/creating_button

OUTPUT EVENT to port <ui>
	\Event: (event name: bind_event; port: ui; parameters: [1, '<Button-2>', 'right_click', 'private_2_field_ui'])

OUTPUT EVENT to port <ui>
	\Event: (event name: bind_event; port: ui; parameters: [1, '<Motion>', 'mouse_move', 'private_2_field_ui'])

OUTPUT EVENT to port <ui>
	\Event: (event name: bind_event; port: ui; parameters: [1, '<ButtonRelease>', 'mouse_release', 'private_2_field_ui'])


EXIT STATE in model <Field>
		State: /root/creating_button

ENTER STATE in model <Field>
		State: /root/running

ENTER STATE in model <Field>
		State: /root/running/main_behaviour

ENTER STATE in model <Field>
		State: /root/running/main_behaviour/running

ENTER STATE in model <Field>
		State: /root/running/deleting_behaviour

ENTER STATE in model <Field>
		State: /root/running/deleting_behaviour/running

ENTER STATE in model <Field>
		State: /root/running/child_behaviour

ENTER STATE in model <Field>
		State: /root/running/child_behaviour/listening

ENTER STATE in model <Field>
		State: /root/running/deleting_balls_behaviour

ENTER STATE in model <Field>
		State: /root/running/deleting_balls_behaviour/listening


OUTPUT EVENT to port <ui>
	\Event: (event name: create_button; port: ui; parameters: [0, 'create_new_field', 'private_4_button_ui'])

__  Current Time:   0.064000 __________________________________________ 

INPUT EVENT from port <private_4_button_ui>
	\Type: button_ui
	\Event: (event name: button_created; port: private_4_button_ui; parameters: [2])

EXIT STATE in model <Button>
		State: /creating_button

ENTER STATE in model <Button>
		State: /running

OUTPUT EVENT to port <ui>
	\Event: (event name: bind_event; port: ui; parameters: [2, '<Button>', 'mouse_click', 'private_4_button_ui'])

__  Current Time:   1.932000 __________________________________________ 

INPUT EVENT from port <private_2_field_ui>
	\Type: field_ui
	\Event: (event name: window_close; port: private_2_field_ui)

EXIT STATE in model <Field>
		State: /root/running/deleting_balls_behaviour/listening

EXIT STATE in model <Field>
		State: /root/running/child_behaviour/listening

EXIT STATE in model <Field>
		State: /root/running/deleting_behaviour/running

EXIT STATE in model <Field>
		State: /root/running/main_behaviour/running

EXIT STATE in model <Field>
		State: /root/running/deleting_balls_behaviour

EXIT STATE in model <Field>
		State: /root/running/child_behaviour

EXIT STATE in model <Field>
		State: /root/running/deleting_behaviour

EXIT STATE in model <Field>
		State: /root/running/main_behaviour

EXIT STATE in model <Field>
		State: /root/running

ENTER STATE in model <Field>
		State: /root/deleting

EXIT STATE in model <Field>
		State: /root/deleting

ENTER STATE in model <Field>
		State: /root/deleted

OUTPUT EVENT to port <ui>
	\Event: (event name: destroy_window; port: ui; parameters: [0])

__  Current Time:   1.934000 __________________________________________ 


INPUT EVENT from port <private_0_<narrow_cast>>
	\Type: <narrow_cast>
	\Event: (event name: delete_field; port: private_0_<narrow_cast>; parameters: ['fields[0]'])

__  Current Time:   1.934000 __________________________________________ 

EXIT STATE in model <MainApp>
		State: /running/root/cd_behaviour/waiting

ENTER STATE in model <MainApp>
		State: /running/root/cd_behaviour/check_nr_of_fields


__  Current Time:   1.984000 __________________________________________ 

EXIT STATE in model <MainApp>
		State: /running/root/cd_behaviour/check_nr_of_fields

ENTER STATE in model <MainApp>
		State: /running/root/cd_behaviour/stopped

EXIT STATE in model <MainApp>
		State: /running/root/cd_behaviour/stopped

EXIT STATE in model <MainApp>
		State: /running/root/main_behaviour/running

EXIT STATE in model <MainApp>
		State: /running/root/cd_behaviour

EXIT STATE in model <MainApp>
		State: /running/root/main_behaviour

EXIT STATE in model <MainApp>
		State: /running/root

ENTER STATE in model <MainApp>
		State: /running/stopped

OUTPUT EVENT to port <ui>
	\Event: (event name: destroy_all; port: ui)

