<?xml version="1.0" ?>
<diagram author="Simon Van Mierlo" name="Timer (Eventloop Version)">
    <top>
        from sccd.runtime.libs.ui import ui
        from time import time

        CANVAS_WIDTH = 800
        CANVAS_HEIGHT = 550
    </top>
    
    <inport name="ui" />

    <class name="MainApp" default="true">
        <attribute name="window_id" />
        <attribute name="canvas_id" />
        <attribute name="text_id" />
        <inport name="field_ui"/>
        <scxml initial="creating_window">
            <state id="creating_window">
                <onentry>
                    <raise port="ui" event="create_window">
                        <parameter expr="800"/><!-- width -->
                        <parameter expr="600"/><!-- height -->
                        <parameter expr='"Fixed Timer"'/><!-- title -->
                        <parameter expr="self.inports['field_ui']"/><!-- inport for response -->
                    </raise>
                </onentry>
                <transition event="window_created" target="../creating_canvas">
                    <parameter name="window_id" type="int" />
                    <script>
                        <![CDATA[
                        self.window_id = window_id
                        ]]>
                    </script>
                    <raise port="ui" event="bind_event">
                        <parameter expr="window_id"/><!-- widget_id -->
                        <parameter expr="ui.EVENTS.WINDOW_CLOSE"/><!-- tk_event -->
                        <parameter expr="'window_close'"/><!-- sccd_event_name -->
                        <parameter expr="self.inports['field_ui']"/><!-- inport for response -->
                    </raise>
                    <raise port="ui" event="bind_event">
                        <parameter expr="window_id"/><!-- widget_id -->
                        <parameter expr="ui.EVENTS.KEY_PRESS"/><!-- tk_event -->
                        <parameter expr="'key_press'"/><!-- sccd_event_name -->
                        <parameter expr="self.inports['field_ui']"/><!-- inport for response -->
                    </raise>
                </transition>
            </state>
            <state id="creating_canvas">
                <onentry>
                    <raise port="ui" event="create_canvas">
                        <parameter expr="self.window_id"/><!-- window_id -->
                        <parameter expr="CANVAS_WIDTH"/><!-- width -->
                        <parameter expr="CANVAS_HEIGHT"/><!-- height -->
                        <parameter expr="{'background':'#222222'}"/><!-- style -->
                        <parameter expr="self.inports['field_ui']"/><!-- inport for response -->
                    </raise>
                </onentry>
                <transition event="canvas_created" target="../creating_clock_text">
                    <parameter name="canvas_id" type="int"/>
                    <script>
                        <![CDATA[
                        self.canvas_id = canvas_id
                        ]]>
                    </script>
                    <raise port="ui" event="bind_event">
                        <parameter expr="canvas_id"/><!-- widget_id -->
                        <parameter expr="ui.EVENTS.MOUSE_RIGHT_CLICK"/><!-- tk_event -->
                        <parameter expr="'right_click'"/><!-- sccd_event_name -->
                        <parameter expr="self.inports['field_ui']"/><!-- inport for response -->
                    </raise>
                    <raise port="ui" event="bind_event">
                        <parameter expr="canvas_id"/><!-- widget_id -->
                        <parameter expr="ui.EVENTS.MOUSE_MOVE"/><!-- tk_event -->
                        <parameter expr="'mouse_move'"/><!-- sccd_event_name -->
                        <parameter expr="self.inports['field_ui']"/><!-- inport for response -->
                    </raise>
                    <raise port="ui" event="bind_event">
                        <parameter expr="canvas_id"/><!-- widget_id -->
                        <parameter expr="ui.EVENTS.MOUSE_RELEASE"/><!-- tk_event -->
                        <parameter expr="'mouse_release'"/><!-- sccd_event_name -->
                        <parameter expr="self.inports['field_ui']"/><!-- inport for response -->
                    </raise>
                </transition>
            </state>
            <state id="creating_clock_text">
                <onentry>
                    <raise port="ui" event="create_text">
                        <parameter expr="self.canvas_id" />
                        <parameter expr="50" />
                        <parameter expr="50" />
                        <parameter expr="'00:00'" />
                        <parameter expr="self.inports['field_ui']" />
                    </raise>
                </onentry>
                <transition event="text_created" target="../creating_interrupt_button">
                    <parameter name="text_id" type="int" />
                    <script>
                        <![CDATA[
                        self.text_id = text_id
                        ]]>
                    </script>
                </transition>
            </state>
            <state id="creating_interrupt_button">
                <onentry>
                    <raise port="ui" event="create_button">
                        <parameter expr="self.window_id" />
                        <parameter expr="'INTERRUPT'" />
                        <parameter expr="self.inports['field_ui']" />
                    </raise>
                </onentry>
                <transition event="button_created" target="../creating_resume_button">
                </transition>
            </state>
            <state id="creating_resume_button">
                <onentry>
                    <raise port="ui" event="create_button">
                        <parameter expr="self.window_id" />
                        <parameter expr="'RESUME'" />
                        <parameter expr="self.inports['field_ui']" />
                    </raise>
                </onentry>
                <transition event="button_created" target="../running">
                </transition>
            </state>
            <state id="running">
                <transition target="." after="0.05">
                    <raise port="ui" event="update_text">
                        <parameter expr="self.canvas_id" />
                        <parameter expr="self.text_id" />
                        <parameter expr="str('%.2f' % (self.getSimulatedTime() / 1000.0))" />
                        <parameter expr="self.inports['field_ui']" />
                    </raise>
                </transition>
                <transition target="../interrupted" event="interrupt_clicked" port="ui">
                    <script>
                        self.update_timers()
                    </script>
                </transition>
            </state>
            <state id="interrupted">
                <transition target="." event="interrupt_clicked" port="ui">
                    <script>
                        self.update_timers()
                    </script>
                </transition>
                <transition target="../running" event="continue_clicked" port="ui">
                    <script>
                        self.update_timers()
                    </script>
                </transition>
            </state>
        </scxml>
    </class>
</diagram>